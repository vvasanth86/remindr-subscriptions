openapi: "3.0.1"
info:
  title: "subscriptions"
  version: "2018-12-28T14:53:41Z"
servers:
- url: "https://asd8wi4zo3.execute-api.ap-south-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/beta"
paths:
  /users:
    get:
      responses:
        400:
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        202:
          description: "202 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
        400:
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        400:
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        201:
          description: "201 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
    delete:
      responses:
        202:
          description: "202 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
        400:
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    options:
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
  /users/{email}:
    get:
      parameters:
      - name: "email"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
    User:
      title: "UserOutputModel"
      required:
      - "email"
      - "prefs"
      type: "object"
      properties:
        email:
          pattern: "[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*"
          type: "string"
        prefs:
          type: "array"
          items:
            type: "string"
            enum:
            - "irctc"
            - "upcoming"
            default: "irctc"
    Error:
      required:
      - "code"
      - "message"
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
    Users:
      title: "UsersOutputModel"
      type: "array"
      items:
        $ref: "#/components/schemas/User"

